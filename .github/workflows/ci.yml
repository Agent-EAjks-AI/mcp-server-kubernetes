name: CI

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: write
    steps:
      - uses: actions/checkout@v4

      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Set up Minikube
        run: |
          curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          sudo install minikube-linux-amd64 /usr/local/bin/minikube
          minikube start --driver=docker
          minikube status

      - name: Start kubectl proxy
        run: |
          # Start the proxy in background and save the PID
          # This gets around having to set the ca cert stuff in bun/node at ~/.minikube/ca.crt which didnt work because no SAN name in cert.
          kubectl proxy --port=8080 &
          echo "KUBECTL_PROXY_PID=$!" >> $GITHUB_ENV

          # Give the proxy a moment to start
          sleep 3

          # Update the kubeconfig file to use the proxy URL
          sed -i 's|https://192.168.49.2:8443|http://localhost:8080|g' ~/.kube/config

          # Verify the change took effect
          grep "server:" ~/.kube/config

      - name: Run tests and generate TAP results
        run: |
          bun run test --reporter tap | tee test-results.tap

      - name: Summarize test results
        id: test-summary
        run: |
          total=$(grep -c '^ok\|^not ok' test-results.tap)
          passed=$(grep -c '^ok' test-results.tap)
          failed=$(grep -c '^not ok' test-results.tap)

          echo "total=$total" >> $GITHUB_OUTPUT
          echo "passed=$passed" >> $GITHUB_OUTPUT
          echo "failed=$failed" >> $GITHUB_OUTPUT

      - name: Add PR Comment with Test Summary
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ### üß™ Bun Test Summary

            | Metric             | Result                       |
            |--------------------|------------------------------|
            | Total Tests        | **${{ steps.test-summary.outputs.total }}**  |
            | ‚úÖ Passed          | **${{ steps.test-summary.outputs.passed }}** |
            | ‚ùå Failed          | **${{ steps.test-summary.outputs.failed }}** |

            ${{ steps.test-summary.outputs.failed == 0 && 'üéâ All tests passed!' || '‚ö†Ô∏è Some tests failed, please check the logs.' }}

      - name: Verify build works
        run: bun run build

      - name: Clean up kubectl proxy
        if: always()
        run: |
          # Always attempt to kill the proxy process even if previous steps fail
          if [ -n "$KUBECTL_PROXY_PID" ]; then
            echo "Stopping kubectl proxy (PID: $KUBECTL_PROXY_PID)"
            kill $KUBECTL_PROXY_PID || true
          fi

          # Restore the original kubeconfig (optional)
          sed -i 's|http://localhost:8080|https://192.168.49.2:8443|g' ~/.kube/config
