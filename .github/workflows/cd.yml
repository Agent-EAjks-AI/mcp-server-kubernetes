name: cd

on:
  push:
    tags:
      - v*

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Set up Minikube
        run: |
          curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          sudo install minikube-linux-amd64 /usr/local/bin/minikube
          minikube start --driver=docker
          minikube status

      - name: Start kubectl proxy
        run: |
          # Start the proxy in background and save the PID
          kubectl proxy --port=8080 &  
          echo "KUBECTL_PROXY_PID=$!" >> $GITHUB_ENV

          # Give the proxy a moment to start
          sleep 3

          # Update the kubeconfig file to use the proxy URL
          sed -i 's|https://192.168.49.2:8443|http://localhost:8080|g' ~/.kube/config

          # Verify the change took effect
          grep "server:" ~/.kube/config

      - name: Run Tests in Minikube
        run: bun run test

      - name: Clean up kubectl proxy
        if: always()
        run: |
          if [ -n "$KUBECTL_PROXY_PID" ]; then
            echo "Stopping kubectl proxy (PID: $KUBECTL_PROXY_PID)"
            kill $KUBECTL_PROXY_PID || true
          fi

          # Restore the original kubeconfig (optional)
          sed -i 's|http://localhost:8080|https://192.168.49.2:8443|g' ~/.kube/config

      - name: Update version number
        # this will fetch the current version number and update it from github actions reecetech/version-increment
        uses: reecetech/version-increment@2024.10.1
        id: version
        with:
          scheme: semver
          increment: patch # major, minor, patch (according to semver)

      - name: Commit the new version
        run: |
          # Update the version in package.json and commit the change
          jq --arg v "${{ steps.version.outputs.version }}" '.version = $v' package.json > temp.json && mv temp.json package.json
          git add package.json
          git commit -m "Bump version to ${{ steps.version.outputs.version }}"
          git tag ${{ steps.version.outputs.version }}
          git push origin ${{ steps.version.outputs.version }}

      - name: Build For production
        run: bun run build

      - name: Publish to NPM
        run: npm publish --access public
        env:
          # This is the secret token for npm
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Push to Dockerhub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Re-build and Push Image
        run: |
          docker buildx build -t flux159/mcp-server-kubernetes --platform linux/amd64,linux/arm64 --push .
